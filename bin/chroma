#! /usr/bin/env node

const minimist = require('minimist')
const es = require('event-stream')
const { compose } = require('ramda')

const { stringToHsl, objectToHsl } = require('../lib')

const args = minimist(process.argv.slice(2))

const passthrough = _ => {
  console.log('>>', _)
  console.log(typeof _)
  return typeof _ === 'string'
    ? sendAsString(_)
    : objectToHsl(_)
}

const trim = str => str.trim()
const sendAsString = compose(
  stringToHsl,
  trim
)
const toString = _ => _.toString()
const parse = _ => {
  try {
    return JSON.parse(_)
  } catch (err) {
    return _
  }
}
const toJson = _ => JSON.stringify(_, null, '  ')

process.stdin
  .pipe(es.mapSync(compose(
    toJson,
    passthrough,
    parse,
    toString
  )))
  .pipe(process.stdout)
